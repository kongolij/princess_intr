openapi: 3.0.3
info:
  title: User Management API
  version: 1.0.0
  description: API for managing user registration, profiles, addresses, and preferences.

servers:
  - url: https://devapic.princesauto.com/ecom/v1
    description: Dev environment
  - url: https://testapic.princesauto.com/ecom/v1
    description: Test environment
  - url: https://apic.princesauto.com/ecom/v1
    description: Production environment

tags:
  - name: user
    description: User registration and profile management
  - name: address
    description: Manage user shipping and billing addresses
  - name: preferences
    description: Manage user marketing and language preferences

paths:
  /users/register:
    post:
      tags:
        - user
      summary: Register a new user
      parameters:
        - $ref: '#/components/parameters/OcpApimSubscriptionKey'
        - $ref: '#/components/parameters/CartId'
        - $ref: '#/components/parameters/MyStoreId'
        - $ref: '#/components/parameters/MyPostalCode'
        - $ref: '#/components/parameters/RecaptchaToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileCreate'
            examples:
              basicRegistration:
                summary: Basic registration without marketing preferences
                value:
                  firstName: Jane
                  lastName: Doe
                  email: jane.doe@example.com
                  password: SecureP@ss123
              fullRegistration:
                summary: Registration with full marketing preferences
                value:
                  firstName: John
                  lastName: Smith
                  email: john.smith@example.com
                  password: AnotherSecureP@ss456
                  preferences:
                    marketingOptIn: ["promotions", "events", "products"]
      responses:
        '201':
          description: User created successfully.
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/JWTResponse'
        '400':
          description: Validation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Required parameter firstName  is missing:
                  value:
                    error_code: user_99999
                    message: Required parameter firstName is missing
                    type: general
        '409':
          description: Conflict - The email address is already in use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                EmailAlreadyExists:
                  summary: Email address already registered
                  value:
                    error_code: user_00001
                    message: The provided email address is already associated with an existing account.
                    type: ConflictError            
        '403':
          description: Insufficient priviledges.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Token has insufficent privileges:
                  value:
                    error_code: Forbidden
                    message: You do not have permission to access this resource.
                    type: AuthorizationError  
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Critical dependent service is down:
                  value:
                    error_code: user_99999
                    message: Service unavailable please try after some time
                    type: General
  
  /users/me:
    get:
      tags:
        - user
      summary: Retrieve user profile
      parameters:
        - $ref: '#/components/parameters/OcpApimSubscriptionKey'
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/CartId'
        - $ref: '#/components/parameters/MyStoreId'
        - $ref: '#/components/parameters/MyPostalCode'
      responses:
        '200':
          description: User profile retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileBase'
        '401':
          description: Invalid token
        '404':
          description: Resource Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Resource not found:
                  value:
                    error_code: user_99999
                    message: Resource not found
                    type: general
        '403':
          description: Insufficient priviledges.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Token has insufficent privileges:
                  value:
                    error_code: Forbidden
                    message: You do not have permission to access this resource.
                    type: AuthorizationError              
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Critical dependent service is down:
                  value:
                    error_code: user_99999
                    message: Service unavailable please try after some time
                    type: General  

    put:
      tags:
        - user
      summary: Update user profile
      parameters:
        - $ref: '#/components/parameters/OcpApimSubscriptionKey'
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/CartId'
        - $ref: '#/components/parameters/MyStoreId'
        - $ref: '#/components/parameters/MyPostalCode'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileBase'
      responses:
        '200':
          description: User profile updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileBase'
        '401':
          description: Invalid token
        '400': 
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Bad Request:
                  value:
                    error_code: user_99999
                    message: "The email field contains invalid characters." 
                    type: general
        '403':
          description: Insufficient priviledges.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Token has insufficent privileges:
                  value:
                    error_code: Forbidden
                    message: You do not have permission to access this resource.
                    type: AuthorizationError              
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Critical dependent service is down:
                  value:
                    error_code: user_99999
                    message: Service unavailable please try after some time
                    type: General  
      

  /users/me/addresses:
    get:
      tags:
        - address
      summary: Retrieve user addresses
      parameters:
        - $ref: '#/components/parameters/OcpApimSubscriptionKey'
        - $ref: '#/components/parameters/Authorization'
      responses:
        '200':
          description: List of user addresses retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
        '401':
          description: Invalid token
        '404':
          description: Resource Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Resource not found:
                  value:
                    error_code: user_address_99999
                    message: Resource not found
                    type: general
        '403':
          description: Insufficient priviledges.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Token has insufficent privileges:
                  value:
                    error_code: Forbidden
                    message: You do not have permission to access this resource.
                    type: AuthorizationError              
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Critical dependent service is down:
                  value:
                    error_code: user_99999
                    message: Service unavailable please try after some time
                    type: General  
      

    post:
      tags:
        - address
      summary: Add a new address for the user
      parameters:
        - $ref: '#/components/parameters/OcpApimSubscriptionKey'
        - $ref: '#/components/parameters/Authorization'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
      responses:
        '200':
          description: Address added successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          
        '401':
          description: Invalid token
        '403':
          description: Insufficient priviledges.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Token has insufficent privileges:
                  value:
                    error_code: Forbidden
                    message: You do not have permission to access this resource.
                    type: AuthorizationError 
        '422': 
          description: Bad Request.  
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Bad Request:
                  value:
                    error_code: user_address_99999
                    message: "The Address was not valid. This is the result of missing required fields, or of invalid data. See the response for more details." 
                    type: general                         
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Critical dependent service is down:
                  value:
                    error_code: user_99999
                    message: Service unavailable please try after some time
                    type: General   

  /users/me/addresses/{addressId}:
    put:
      tags:
        - address
      summary: Update an existing address
      parameters:
        - $ref: '#/components/parameters/OcpApimSubscriptionKey'
        - $ref: '#/components/parameters/Authorization'
        - name: addressId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
      responses:
        '200':
          description: Address updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
        '401':
          description: Invalid token
        '403':
          description: Insufficient priviledges.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Token has insufficent privileges:
                  value:
                    error_code: Forbidden
                    message: You do not have permission to access this resource.
                    type: AuthorizationError 
        '422': 
          description: Bad Request.  
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Bad Request:
                  value:
                    error_code: user_address_99999
                    message: "The Address was not valid. This is the result of missing required fields, or of invalid data. See the response for more details." 
                    type: general                         
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Critical dependent service is down:
                  value:
                    error_code: user_99999
                    message: Service unavailable please try after some time
                    type: General   

    delete:
      tags:
        - address
      summary: Delete an address
      parameters:
        - $ref: '#/components/parameters/OcpApimSubscriptionKey'
        - $ref: '#/components/parameters/Authorization'
        - name: addressId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Address deleted successfully.
        '400':
          description: Validation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Required parameter account number is missing:
                  value:
                    error_code: user_adress_99999
                    message: Required parameter address id is missing
                    type: general  
        '401':
          description: Invalid token
        '403':
          description: Insufficient priviledges.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Token has insufficent privileges:
                  value:
                    error_code: Forbidden
                    message: You do not have permission to access this resource.
                    type: AuthorizationError                     
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Critical dependent service is down:
                  value:
                    error_code: user_99999
                    message: Service unavailable please try after some time
                    type: General      
          

  /users/me/preferences:
    get:
      tags:
        - preferences
      summary: Retrieve user preferences
      parameters:
        - $ref: '#/components/parameters/OcpApimSubscriptionKey'
        - $ref: '#/components/parameters/Authorization'
        
      responses:
        '200':
          description: User preferences retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Preferences'
        '401':
          description: Invalid token
        '403':
          description: Insufficient priviledges.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Token has insufficent privileges:
                  value:
                    error_code: Forbidden
                    message: You do not have permission to access this resource.
                    type: AuthorizationError              
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Critical dependent service is down:
                  value:
                    error_code: user_99999
                    message: Service unavailable please try after some time
                    type: General         

    put:
      tags:
        - preferences
      summary: Update user preferences
      parameters:
        - $ref: '#/components/parameters/OcpApimSubscriptionKey'
        - $ref: '#/components/parameters/Authorization'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Preferences'
      responses:
        '200':
          description: User preferences updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Preferences'  
        '401':
          description: Invalid token
        '403':
          description: Insufficient priviledges.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Token has insufficent privileges:
                  value:
                    error_code: Forbidden
                    message: You do not have permission to access this resource.
                    type: AuthorizationError 
        '422': 
          description: Bad Request.  
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Bad Request:
                  value:
                    error_code: user_address_99999
                    message: "This is the result of missing required fields, or of invalid data. See the response for more details." 
                    type: general                         
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Critical dependent service is down:
                  value:
                    error_code: user_99999
                    message: Service unavailable please try after some time
                    type: General             

components:
  parameters:
    Authorization:
      in: header
      name: Authorization
      required: true
      description: JWT token
      schema:
        type: string
    OcpApimSubscriptionKey:
      in: header
      name: Ocp-Apim-Subscription-Key
      required: true
      description: Azure APIM subscription key
      schema:
        type: string
    CartId:
      in: header
      name: CartId
      required: false
      description: Internal cart ID or "current"
      schema:
        type: string
    MyStoreId:
      in: header
      name: MyStoreId
      required: false
      description: Store identifier for personalized experience
      schema:
        type: string
    MyPostalCode:
      in: header
      name: MyPostalCode
      required: false
      description: User's current postal code
      schema:
        type: string
    RecaptchaToken:
       name: Recaptcha-Token
       in: header
       required: true
       description: Google reCAPTCHA v3 token
       schema:
        type: string

  schemas:
    JWTResponse:
      type: object
      properties:
        access_token:
          type: string
          description:  JWT token.
        token_type:
          type: string
          example: 'Authorization: Bearer xxxxx'
        expires_in:
          type: integer
          description: Duration in seconds for which the token is valid.    
    UserProfileCreate:
      type: object
      required:
        - firstName
        - lastName
        - email
        - password
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        preferences:
          $ref: '#/components/schemas/Preferences'
    UserProfileBase:
      type: object
      required:
        - firstName
        - lastName
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        preferences:
          $ref: '#/components/schemas/Preferences'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'        
            
    Preferences:
      type: object
      properties:
        language:
          type: string
        marketingOptIn:
          type: array
          items:
            type: string
            enum: [promotions, events, products]
        preferredStoreId:
          type: integer

    Address:
      type: object
      required:
        - address1
        - city
        - province
        - postalCode
        - country 
      properties:
        id:
          type: integer
        addresstype:
          type: string
          enum:
            - residential
            - commercial
          description: The address type, either residential or commercial.
        nickname:
          type: string  
        address1:
          type: string
        address2:
          type: string
        city:
          type: string
        province:
          type: string
        postalCode:
          type: string
        country:
          type: string
     
        phone:
          type: string

    ErrorResponse:
      type: object
      properties:
        error_code:
          type: string
          description: A unique identifier for the error type.
        message:
          type: string
          description: A human-readable explanation of the error.
        type:
          type: string
          description: The category or nature of the error.
    