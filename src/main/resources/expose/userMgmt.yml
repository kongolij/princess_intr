openapi: 3.0.3
info:
  title: User Management API
  version: 1.0.0
  description: API for managing user registration, profiles, addresses, and preferences.

servers:
  - url: https://devapic.princesauto.com/ecom/v1
    description: Dev environment
  - url: https://testapic.princesauto.com/ecom/v1
    description: Test environment
  - url: https://apic.princesauto.com/ecom/v1
    description: Production environment

tags:
  - name: user
    description: User registration and profile management
  - name: address
    description: Manage user shipping and billing addresses
  - name: preferences
    description: Manage user marketing and language preferences

paths:
  /users/register:
    post:
      tags:
        - user
      summary: Register a new user
      parameters:
        - $ref: '#/components/parameters/OcpApimSubscriptionKey'
        - $ref: '#/components/parameters/CartId'
        - $ref: '#/components/parameters/MyStoreId'
        - $ref: '#/components/parameters/MyPostalCode'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
            examples:
              basicRegistration:
                summary: Basic registration without marketing preferences
                value:
                  firstName: Jane
                  lastName: Doe
                  email: jane.doe@example.com
                  password: SecureP@ss123
              fullRegistration:
                summary: Registration with full marketing preferences
                value:
                  firstName: John
                  lastName: Smith
                  email: john.smith@example.com
                  password: AnotherSecureP@ss456
                  preferences:
                    marketingOptIn: ["promotions", "events", "products"]
      responses:
        '201':
          description: User created successfully.
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /users/{userId}:
    get:
      tags:
        - user
      summary: Retrieve user profile
      parameters:
        - $ref: '#/components/parameters/OcpApimSubscriptionKey'
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/CartId'
        - $ref: '#/components/parameters/MyStoreId'
        - $ref: '#/components/parameters/MyPostalCode'
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User profile retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '404':
          $ref: '#/components/responses/NotFound'

    put:
      tags:
        - user
      summary: Update user profile
      parameters:
        - $ref: '#/components/parameters/OcpApimSubscriptionKey'
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/CartId'
        - $ref: '#/components/parameters/MyStoreId'
        - $ref: '#/components/parameters/MyPostalCode'
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
      responses:
        '200':
          description: User profile updated successfully.

  /users/{userId}/addresses:
    get:
      tags:
        - address
      summary: Retrieve user addresses
      parameters:
        - $ref: '#/components/parameters/OcpApimSubscriptionKey'
        - $ref: '#/components/parameters/Authorization'
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of user addresses retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'

    post:
      tags:
        - address
      summary: Add a new address for the user
      parameters:
        - $ref: '#/components/parameters/OcpApimSubscriptionKey'
        - $ref: '#/components/parameters/Authorization'
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
      responses:
        '201':
          description: Address added successfully.

  /users/{userId}/addresses/{addressId}:
    put:
      tags:
        - address
      summary: Update an existing address
      parameters:
        - $ref: '#/components/parameters/OcpApimSubscriptionKey'
        - $ref: '#/components/parameters/Authorization'
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: addressId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
      responses:
        '200':
          description: Address updated successfully.

    delete:
      tags:
        - address
      summary: Delete an address
      parameters:
        - $ref: '#/components/parameters/OcpApimSubscriptionKey'
        - $ref: '#/components/parameters/Authorization'
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: addressId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Address deleted successfully.

  /users/{userId}/preferences:
    get:
      tags:
        - preferences
      summary: Retrieve user preferences
      parameters:
        - $ref: '#/components/parameters/OcpApimSubscriptionKey'
        - $ref: '#/components/parameters/Authorization'
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User preferences retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Preferences'

    put:
      tags:
        - preferences
      summary: Update user preferences
      parameters:
        - $ref: '#/components/parameters/OcpApimSubscriptionKey'
        - $ref: '#/components/parameters/Authorization'
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Preferences'
      responses:
        '200':
          description: User preferences updated successfully.

components:
  parameters:
    Authorization:
      in: header
      name: Authorization
      required: true
      description: JWT token
      schema:
        type: string
    OcpApimSubscriptionKey:
      in: header
      name: Ocp-Apim-Subscription-Key
      required: true
      description: Azure APIM subscription key
      schema:
        type: string
    CartId:
      in: header
      name: CartId
      required: false
      description: Internal cart ID or "current"
      schema:
        type: string
    MyStoreId:
      in: header
      name: MyStoreId
      required: false
      description: Store identifier for personalized experience
      schema:
        type: string
    MyPostalCode:
      in: header
      name: MyPostalCode
      required: false
      description: User's current postal code
      schema:
        type: string

  responses:
    BadRequest:
      description: Validation failed.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequest'

    NotFound:
      description: Resource not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFound'

    InternalServerError:
      description: Internal server error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InternalServerError'

  schemas:
    UserProfile:
      type: object
      required:
        - firstName
        - lastName
        - email
        - password
      properties:
        id:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        preferences:
          $ref: '#/components/schemas/Preferences'
        store:
          type: object
          properties:
            preferredStoreId:
              type: integer
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'

    Preferences:
      type: object
      properties:
        language:
          type: string
        marketingOptIn:
          type: array
          items:
            type: string
            enum: [promotions, events, products]

    Address:
      type: object
      required:
        - type
        - line1
        - city
        - province
        - postalCode
        - country
      properties:
        type:
          type: string
          enum: [shipping, billing]
        line1:
          type: string
        city:
          type: string
        province:
          type: string
        postalCode:
          type: string
        country:
          type: string

    BadRequest:
      type: object
      properties:
        error_code:
          type: string
        message:
          type: string
        type:
          type: string

    NotFound:
      type: object
      properties:
        error_code:
          type: string
        message:
          type: string
        type:
          type: string

    InternalServerError:
      type: object
      properties:
        error_code:
          type: string
        message:
          type: string
        type:
          type: string