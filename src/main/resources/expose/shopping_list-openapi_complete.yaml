openapi: 3.0.3
info:
   title: Shopping Lists
   description: This API provides an interface to manage Shopping Lists
   version: v1
   contact:
      name: EPAM
      email: jimmy-kongoli@epam.com
servers:
-  url: https://devapic.princesauto.com/ecom/v1
   description: Dev environment
-  url: https://testapic.princesauto.com/ecom/v1
   description: Test environment
-  url: https://apic.princesauto.com/ecom/v1
   description: Production environment
tags:
-  name: Shopping Lists
   description: Operations related to shopping lists
paths:
   /shopping-lists:
      get:
         summary: List shopping lists
         description: Retrieve a paginated list of all shopping lists created by the authenticated user.
         operationId: queryShoppingLists
         tags:
         - Shopping Lists
         security:
         -  bearerAuth: []
         parameters:
         -  $ref: '#/components/parameters/OcpApimSubscriptionKey'
         -  $ref: '#/components/parameters/MyStoreId'
         -  $ref: '#/components/parameters/Language'
         -  in: query
            name: limit
            schema:
               type: integer
               default: 10
               minimum: 0
               maximum: 50
            description: The maximum number of shopping lists per page
         -  in: query
            name: offset
            schema:
               type: integer
               default: 0
               minimum: 0
               maximum: 100
            description: The number of elements to skip
         -  in: query
            name: sort
            schema:
               type: string
               pattern: ^(name|numberOfLines) (asc|desc)$
               example: name asc
            description: Sorting criteria for the shopping lists.
         responses:
            '200':
               description: OK
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/ShoppingListPageOutput'
            400:
               description: Bad Request
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/ErrorResponse'
                     examples:
                        InvalidQueryParameterExample:
                           value:
                              error_code: SHOPPING_LIST_009_INVALID_REQUEST
                              message: Invalid query parameters (limit must be between 0 and 50).
                              type: ValidationError
            '401':
               description: Unauthorized
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/ErrorResponse'
                     examples:
                        Unauthorized:
                           $ref: '#/components/examples/UnauthorizedErrorExample'
            '500':
               description: Internal Server Error
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/ErrorResponse'
                     examples:
                        InternalServerError:
                           $ref: '#/components/examples/InternalServerErrorExample'


      post:
         summary: Create a new shopping list
         description: Create a new shopping list with  description and optional line items.
         operationId: createShoppingList
         tags:
         - Shopping Lists
         security:
         -  bearerAuth: []
         parameters:
         -  $ref: '#/components/parameters/OcpApimSubscriptionKey'
         -  $ref: '#/components/parameters/MyStoreId'
         -  $ref: '#/components/parameters/Language'
         -  in: query
            name: handleDuplicateName
            schema:
               type: boolean
               default: false
            description: Handle duplicate names automatically.
         requestBody:
            required: true
            content:
               application/json:
                  schema:
                     $ref: '#/components/schemas/ShoppingListCreateInput'
         responses:
            '201':
               description: Shopping list successfully created.
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/ShoppingListCreateOutput'
            '400':
               description: Bad Request
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/ErrorResponse'
                     examples:
                        NameMissingValidation:
                           $ref: '#/components/examples/NameMissingValidationExample'
                        DescriptionMissingValidatio:
                           $ref: '#/components/examples/DescriptionMissingValidationExample'
                        DuplicateNameValidation:
                           $ref: '#/components/examples/DuplicateNameValidationExample'    
                               
            '401':
               description: Unauthorized
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/ErrorResponse'
                     examples:
                        Unauthorized:
                           $ref: '#/components/examples/UnauthorizedErrorExample'
            '500':
               description: Internal Server Error
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/ErrorResponse'
                     examples:
                        InternalServerError:
                           $ref: '#/components/examples/InternalServerErrorExample'

   /shopping-lists/{id}:
      get:
         summary: Get shopping list details
         description: Retrieve detailed information for a specific shopping list by ID.
         operationId: getShoppingListById
         tags:
         - Shopping Lists
         security:
         -  bearerAuth: [] 
         parameters:
         -  $ref: '#/components/parameters/OcpApimSubscriptionKey'
         -  $ref: '#/components/parameters/MyStoreId'
         -  $ref: '#/components/parameters/Language'
         -  in: path
            name: id
            required: true
            schema:
               type: integer
            description: Shopping list ID
         responses:
            '200':
               description: OK
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/ShoppingListOutput'
            '404':
               description: Shopping list not found
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/ErrorResponse'
                     examples:
                        NotFound:
                           summary: Shopping list not found
                           value:
                              error_code: SHOPPING_LIST_010_NOT_FOUND
                              type: NotFoundError
                              message: The requested shopping list could not be found.
            '401':
               description: Unauthorized
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/ErrorResponse'
                     examples:
                        Unauthorized:
                           $ref: '#/components/examples/UnauthorizedErrorExample'
            '500':
               description: Internal Server Error
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/ErrorResponse'
                     examples:
                        InternalServerError:
                           $ref: '#/components/examples/InternalServerErrorExample'
      put:
         summary: Update shopping list
         description:  Updates the shopping list. You may update the name, description, or modify/add items without
            replacing the entire list. Items with an `id` will be updated; items without an `id` will be added.
         operationId: patchShoppingList
         tags:
         - Shopping Lists
         parameters:
         -  $ref: '#/components/parameters/OcpApimSubscriptionKey'
         -  in: path
            name: id
            required: true
            schema:
               type: integer
            description: Shopping list ID
         requestBody:
            required: true
            content:
               application/json:
                  schema:
                     $ref: '#/components/schemas/ShoppingListUpdateInput'
         responses:
            '200':
               description: OK
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/ShoppingListOutput'
            '400':
               description: Bad Request
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/ErrorResponse'
                     examples:
                        InvalidPatchInput:
                           value:
                              error_code: SHOPPING_LIST_001_INVALID_INPUT
                              type: ValidationError
                              message: Provided data for patching is invalid or incomplete.
                              
                        NameMissingValidation:
                           $ref: '#/components/examples/NameMissingValidationExample'
                        DescriptionMissingValidatio:
                           $ref: '#/components/examples/DescriptionMissingValidationExample'
                        DuplicateNameValidation:
                           $ref: '#/components/examples/DuplicateNameValidationExample'                

            '404':
               description: Shopping list not found
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/ErrorResponse'
                     examples:
                        NotFound:
                           value:
                              error_code: SHOPPING_LIST_008_NOT_FOUND
                              type: NotFoundError
                              message: The requested shopping list could not be found.
            '401':
               description: Unauthorized
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/ErrorResponse'
                     examples:
                        Unauthorized:
                           $ref: '#/components/examples/UnauthorizedErrorExample'
            '500':
               description: Internal Server Error
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/ErrorResponse'
                     examples:
                        InternalServerError:
                           $ref: '#/components/examples/InternalServerErrorExample'
      delete:
         summary: Delete shopping list
         description: Permanently delete a shopping list by ID.
         operationId: deleteShoppingList
         tags:
         - Shopping Lists
         parameters:
         -  $ref: '#/components/parameters/OcpApimSubscriptionKey'
         -  in: path
            name: id
            required: true
            schema:
               type: integer
            description: Shopping list ID
         responses:
            '204':
               description: No Content
            '400':
               description: Invalid input – the shopping list ID is missing or malformed.
               content:
                 application/json:
                    schema:
                       $ref: '#/components/schemas/ErrorResponse'
                    examples:
                      InvalidShoppingListIdExample:
                        summary: ID must be a valid integer greater than zero
                        value:
                          error_code: SHOPPING_LIST_001_INVALID_INPUT
                          type: ValidationError
                          message: The provided shopping list ID is invalid. It must be a positive integer.
            '404':
               description: Shopping list not found
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/ErrorResponse'
                     examples:
                        NotFound:
                           value:
                              error_code: SHOPPING_LIST_010_NOT_FOUND
                              type: NotFoundError
                              message: The requested shopping list could not be found.
            '401':
               description: Unauthorized
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/ErrorResponse'
                     examples:
                        Unauthorized:
                           $ref: '#/components/examples/UnauthorizedErrorExample'
            '500':
               description: Internal Server Error
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/ErrorResponse'
                     examples:
                        InternalServerError:
                           $ref: '#/components/examples/InternalServerErrorExample'

   /shopping-lists/{id}/items:
      get:
         summary: Get items in a shopping list
         description: Returns all line items within the specified shopping list.
         operationId: getItemsInShoppingList
         tags:
         - Shopping List Items
         parameters:
         -  $ref: '#/components/parameters/OcpApimSubscriptionKey'
         -  $ref: '#/components/parameters/Language'
         -  $ref: '#/components/parameters/MyStoreId'
         -  name: id
            in: path
            required: true
            schema:
               type: integer
            description: Shopping list ID
         responses:
            '200':
               description: Line items retrieved successfully
               content:
                  application/json:
                     schema:
                        type: object
                        properties:
                           items:
                              type: array
                              items:
                                 $ref: '#/components/schemas/ShoppingListItemOutput'
            '400':
               description: Invalid input
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/ErrorResponse'
                     examples:
                        InvalidId:
                           value:
                              error_code: SHOPPING_LIST_001_INVALID_INPUT
                              type: ValidationError
                              message: The shopping list ID is invalid.
            '404':
               description: Shopping list not found
               content:
                  application/json: 
                    schema:
                     $ref: '#/components/schemas/ErrorResponse'
                    examples:
                      NotFound:
                         value:
                           error_code: SHOPPING_LIST_010_NOT_FOUND
                           type: NotFoundError
                           message: The requested shopping list could not be found.
            '401':
               description: Unauthorized
               content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/ErrorResponse'
                    examples:
                      Unauthorized:
                        $ref: '#/components/examples/UnauthorizedErrorExample'
            '500':
               description: Internal Server Error
               content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/ErrorResponse'
                    examples:
                      InternalServerError:
                        $ref: '#/components/examples/InternalServerErrorExample'
      post:
         summary: Add item(s) to a shopping list
         operationId: addItemsToShoppingList
         description: Adds one or more items to a specific shopping list.
         tags:
         - Shopping List Items
         parameters:
         -  $ref: '#/components/parameters/OcpApimSubscriptionKey'
         -  name: id
            in: path
            required: true
            schema:
               type: integer
            description: Shopping list ID
         requestBody:
            required: true
            content:
               application/json:
                  schema:
                     type: object
                     properties:
                        items:
                           type: array
                           items:
                              $ref: '#/components/schemas/ShoppingListItemCreateInput'
         responses:
            '200':
               description: Items added successfully
               content:
                 application/json:
                   schema:
                      $ref: '#/components/schemas/ShoppingListOutput'
            '400':
               description: Invalid input
               content:
                 application/json:
                     schema:
                        $ref: '#/components/schemas/ErrorResponse'
                     examples:  
                        InvalidLineItem:
                          $ref: '#/components/examples/InvalidLineItemExample' 
            '404':
               description: Shopping list not found
               content:
                  application/json: 
                    schema:
                     $ref: '#/components/schemas/ErrorResponse'
                    examples:
                      NotFound:
                         value:
                           error_code: SHOPPING_LIST_010_NOT_FOUND
                           type: NotFoundError
                           message: The requested shopping list could not be found.
               
            '401':
               description: Unauthorized
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/ErrorResponse'
                     examples:
                        Unauthorized:
                           $ref: '#/components/examples/UnauthorizedErrorExample'
            '500':
               description: Internal Server Error
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/ErrorResponse'
                     examples:
                        InternalServerError:
                           $ref: '#/components/examples/InternalServerErrorExample'

   /shopping-lists/{id}/items/{itemId}:
      put:
         summary: Update an item in a shopping list
         operationId: updateItemInShoppingList
         description: Replaces an item in a shopping list with new productId, variantId, and quantity.
         tags:
         - Shopping List Items
         parameters:
         -  $ref: '#/components/parameters/OcpApimSubscriptionKey'
         -  name: id
            in: path
            required: true
            schema:
               type: integer
            description: Shopping list ID
         -  name: itemId
            in: path
            required: true
            schema:
               type: integer
            description: Item ID inside the shopping list
         requestBody:
            required: true
            content:
               application/json:
                  schema:
                     type: object
                     properties:
                        productId:
                           type: integer
                           description: New BigCommerce Product ID
                        variantId:
                           type: integer
                           description: New BigCommerce Variant ID
                        quantity:
                           type: integer
                           minimum: 1
                           description: New quantity for the item
                     required:
                     - productId - variantId - quantity
         responses:
            '200':
               description: Item updated successfully
               content:
                 application/json:
                    schema:
                      $ref: '#/components/schemas/ShoppingListItemOutput'          
            '400':
               description: Invalid input
               content:
                 application/json:
                     schema:
                        $ref: '#/components/schemas/ErrorResponse'
                     examples:  
                        InvalidLineItem:
                          $ref: '#/components/examples/InvalidLineItemExample' 
            '404':
               description: Shopping list or item not found
            '401':
               description: Unauthorized
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/ErrorResponse'
                     examples:
                        Unauthorized:
                           $ref: '#/components/examples/UnauthorizedErrorExample'
            '500':
               description: Internal Server Error
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/ErrorResponse'
                     examples:
                        InternalServerError:
                           $ref: '#/components/examples/InternalServerErrorExample'
      delete:
         summary: Remove an item from a shopping list

         operationId: removeItemFromShoppingList
         description: Removes a specific item from a shopping list.
         tags:
         - Shopping List Items
         parameters:
         -  $ref: '#/components/parameters/OcpApimSubscriptionKey'
         -  name: id
            in: path
            required: true
            schema:
               type: integer
            description: Shopping list ID
         -  name: itemId
            in: path
            required: true
            schema:
               type: integer
            description: Item ID inside the shopping list
         responses:
            '204':
               description: Item successfully removed
            '400':
               description: Invalid input
            '404':
               description: Shopping list or item not found
            '401':
               description: Unauthorized
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/ErrorResponse'
                     examples:
                        Unauthorized:
                           $ref: '#/components/examples/UnauthorizedErrorExample'
            '500':
               description: Internal Server Error
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/ErrorResponse'
                     examples:
                        InternalServerError:
                           $ref: '#/components/examples/InternalServerErrorExample'
components:
   parameters:

      Language:

         name: language
         in: query
         schema:
            type: string
            enum:
            - en
            - fr
         description: Language preference ("en" or "fr")
     
      OcpApimSubscriptionKey:
         in: header
         name: Ocp-Apim-Subscription-Key
         required: true
         description: Azure APIM subscription key
         schema:
            type: string
      MyStoreId:
         in: header
         name: MyStoreId
         required: false
         description: Store identifier for personalized experience
         schema:
            type: string

   securitySchemes:
      bearerAuth:
         type: http
         scheme: bearer
         description: internal JWT token
         bearerFormat: internal JWT token

   schemas:

      Money:
         type: object
         description: Monetary amount in a specific currency.
         properties:
            type:
               type: string
               enum:
               - centPrecision
               - highPrecision
               description: Precision type. "centPrecision" for regular currency precision, "highPrecision" for extra decimal
                  places.
               example: centPrecision
            centAmount:
               type: integer
               description: Amount in the smallest unit of the currency (e.g., 1234 = $12.34).
               example: 1234
            fractionDigits:
               type: integer
               description: Number of fraction digits for the currency (e.g., 2 for CAD; more for highPrecision cases)
               example: 2
            currency:
               type: string
               description: ISO 4217 currency code (e.g., "USD", "CAD").
               example: CAD
         required:
         - type
         - centAmount
         - fractionDigits
         - currency
         example:
            type: centPrecision
            currency: USD
            centAmount: 1299

            fractionDigits: 2
      Availability:
         type: object
         description: Availability information (online and/or in-store).
         properties:
            online:
               type: object
               description: Online stock availability.
               properties:
                  isInStock:
                     type: boolean
                     description: Whether item is in stock online
                  availableQuantity:
                     type: integer
                     description: Available quantity online
            inStore:
               type: object
               nullable: true
               description: In-store stock availability for provided storeId
               properties:
                  storeId:
                     type: string
                     description: Store ID
                  storeName:
                     type: string
                     description: Store name
                  isInStock:
                     type: boolean
                     description: Whether item is in stock at store
                  availableQuantity:
                     type: integer
                     description: Available quantity at store
         required:
         - online
         
      ShoppingListItemBase:
         type: object
         properties:
            id:
               type: integer
               description: Internal Shopping List Item ID (used for updates or deletions)
               example: 123
            sku:
               type: string   
            updatedAt:
               type: integer
               format: int64
               description: Unix timestamp when the item was last updated    
            productId:
               type: integer
               description: Internal BigCommerce Product ID
            variantId:
               type: integer
               description: Internal BigCommerce Variant ID
            productName:
               type: string
               description: Localized product name in English and French
            quantity:
               type: integer
               description: Quantity of the item in the shopping list
               minimum: 1
            imageUrl:
               type: string
               description: Public URL to the variant image if available; falls back to the product image otherwise
         required:
         - sku
         - productId
         - variantId
         - productName
         - quantity
         
      ShoppingListUpdateInput:
         type: object
         description: Input payload for updating a shopping list (name, description, and line items).
         properties:
           name:
             type: string
             description: New name of the shopping list (optional)
             pattern: ^(?!\s)[\x00-\x7F]{1,40}(?<!\s)$
           description:
             type: string
             description: Updated description of the shopping list (optional)
           items:
             type: array
             description: Optional list of items to update or add. Items with an `id` will be updated; items without will be added.
             items:
               $ref: '#/components/schemas/ShoppingListItemInput'
         example:
           name: "My shopping list Name"
           description: "description"
           items:
            - productId: 140
              variantId: 2049
              quantity: 2
            - productId: 132
              variantId: 1935
              quantity: 1
         required: 
           -name
           -description
         
      
      ShoppingListItemOutput:
         allOf:
         -  $ref: '#/components/schemas/ShoppingListItemBase'
         -  type: object
            properties:
               options:
                  type: array
                  description: List of selected options for the variant (localized based on requested language)
                  items:
                     type: object
                     properties:
                        label:
                           type: string
                           description: Localized label for the option (single language)
                        value:
                           type: string
                           description: Localized value for the option (single language)
               prices:
                  type: object
                  description: Pricing information for the variant
                  properties:
                     price:
                        $ref: '#/components/schemas/Money'
                     salePrice:
                        $ref: '#/components/schemas/Money'
                  required:
                  - price
               availability:
                  $ref: '#/components/schemas/Availability'
               hotBuy:
                  type: boolean
                  description: Indicates if the item is currently on Hot Buy promotion
               clearance:
                  type: boolean
                  description: Indicates if the item is marked as a clearance item   
           
      ShoppingListSummaryOutput:
         type: object
         properties:
            id:
               type: integer
               description: Internal BigCommerce wishlist ID (entityId)
            name:
               type: string
               description: Name of the wishlist
            numberOfLines:
               type: integer
               description: Total number of items (line entries) in the wishlist
            updatedAt:
               type: integer
               format: int64
               description: Unix timestamp when the item was last updated   
            items:
               type: array
               items:
                  $ref: '#/components/schemas/ShoppingListItemBase'
         example:
            id: 12
            name: My shopping list
            numberOfLines: 2
            updatedAt: 1746297412
            items:
            -  id: 12
               sku: abs2000
               productId: 132
               variantId: 1935
               productName: Threaded Head Utility Cylinders
               quantity: 1
               imageUrl: https://cdn.site.com/images/P001.jpg
               updatedAt: 1746297412
            -  id: 14
               productId: 140
               variantId: 2049
               productName: KLEIN TOOLS Combustible Gas Leak Detector
               quantity: 1
               imageUrl: https://cdn11.bigcommerce.com/s-u2rpux9vkx/products/140/images/385/9322322_A0CG_00_01__84988.1745258504.386.513.jpg
               updatedAt: 1746297412
       
      ShoppingListOutput:
         type: object
         properties:
            id:
               type: integer
               description: Internal BigCommerce wishlist ID (entityId)
            name:
               type: string
               description: Name of the shopping list
            description:
               type: string
               description: Optional description of the shopping list provided by the user
            updatedAt:
               type: integer
               format: int64
               description: Unix timestamp (seconds) when the list was last updated    
            numberOfLines:
               type: integer
            items:
               type: array
               items:
                  $ref: '#/components/schemas/ShoppingListItemOutput'
         required:
         - id
         - name
         - numberOfLines
         - items
         example:
            id: 12345
            name: My Summer Wishlist
            updatedAt: 1746297412
            numberOfLines: 2
            items:
            -  id: 12
               sku: q1234
               productId: 5678
               variantId: 9012
               productName: Portable BBQ Grill
               quantity: 1
               imageUrl: https://cdn.site.com/images/portable-bbq.jpg
               updatedAt: 1746297412
               options:
               -  label: Color
                  value: Red
               prices:
                  price:
                     type: centPrecision
                     currency: USD
                     centAmount: 12999
                     fractionDigits: 2
                  salePrice:
                     type: centPrecision
                     currency: USD
                     centAmount: 9999
                     fractionDigits: 2
            -  id: 13
               sku: qw324
               productId: 6789
               variantId: 3456
               productName: Camping Tent
               quantity: 2
               imageUrl: https://cdn.site.com/images/camping-tent.jpg
               updatedAt: 1746297412
               options: []
               prices:
                  price:
                     type: centPrecision
                     currency: USD
                     centAmount: 24999
                     fractionDigits: 2
               availability:
                  online:
                     isInStock: true
                     availableQuantity: 20
                  inStore:
                     storeId: '56789'
                     storeName: Downtown Toronto Store
                     isInStock: true

                     availableQuantity: 5
      
      ShoppingListCreateInput:
         type: object
         properties:
            name:
               type: string
               description: Name of the shopping list (required)
               pattern: ^(?!\s)[\x00-\x7F]{1,40}(?<!\s)$
            description:
               type: string
               description: Description of the shopping list (required)
            items:
               type: array
               description: Initial list of line items
               items:
                  $ref: '#/components/schemas/ShoppingListItemCreateInput'
         required:
         - name
         - description
     

      ShoppingListPageOutput:
         type: object
         properties:
            limit:
               type: integer
            offset:
               type: integer
            count:
               type: integer
            total:
               type: integer
            results:
               type: array
               items:
                  $ref: '#/components/schemas/ShoppingListSummaryOutput'
         example:
            limit: 1
            offset: 0
            count: 1
            total: 10
            results:
            -  id: 12
               name: My shopping list
               numberOfLines: 2
               lastUpdatedDate: '2025-06-15T04:01:26Z'
               items:
               -  id: 12
                  sku: 1w3344
                  productId: 132
                  variantId: 1935
                  productName: Threaded Head Utility Cylinders
                  quantity: 1
                  imageUrl: https://cdn.site.com/images/P001.jpg
               -  id : 14
                  sku: 23Wwwe
                  productId: 140
                  variantId: 2049
                  quantity: 1
                  productName: KLEIN TOOLS Combustible Gas Leak Detector
                  imageUrl: https://cdn11.bigcommerce.com/s-u2rpux9vkx/products/140/images/385/9322322_A0CG_00_01__84988.1745258504.386.513.jpg
         required:
         - limit
         - offset
         - count
         - total
         - results


      ShoppingListItemInput:
         type: object
         description: Input object for updating or creating a shopping list line item.
         properties:
            id:
               type: string
               description: |
                  Internal Shopping List Item ID. Include this only when updating an existing line item. Omit it to create a new item; the system will auto-generate an ID.
            productId:
               type: integer
               description: Internal BigCommerce Product ID
            variantId:
               type: integer
               description: Internal BigCommerce Variant ID
            quantity:
               type: integer
               description: |
                  Quantity of the item. If not provided, the quantity will default to 1.
               minimum: 1
         required:
         - productId
         - variantId
         
      ShoppingListItemCreateInput:
         type: object

         properties:
            productId:
               type: integer
               description: Internal BigCommerce Product ID
            variantId:
               type: integer
               description: Internal BigCommerce Variant ID
            quantity:
               type: integer
               minimum: 1
               default: 1
               description: Quantity to add to the shopping list (defaults to 1 if not provided)
         required:
         - productId
         - variantId
      ShoppingListCreateOutput:
         type: object
         properties:
            id:
               type: string
               description: |
                  Internal ID of the shopping list generated by BigCommerce.   This is an auto-generated unique identifier.
            requestedName:
               type: string
               description: The name provided by the user when creating the shopping list.
            savedName:
               type: string
               description: The actual name saved by the system. May differ from requestedName if a duplicate option was detected.
         required:
         - id
         - requestedName
         - savedName
      ErrorResponse:
         type: object
         properties:

            error_code:
               type: string
            message:
               type: string
            type:
               type: string
   examples:
      UnauthorizedErrorExample:
         value:
            error_code: UNAUTHORIZED
            message: Authentication credentials are missing or invalid.
            type: AuthenticationError
      ForbiddenErrorExample:
         value:
            error_code: FORBIDDEN
            message: You do not have permission to access this resource.
            type: AuthorizationError
      InternalServerErrorExample:
         value:
            error_code: INTERNAL_SERVER_ERROR
            message: Service unavailable please try after some time
            type: General
      InvalidInputExample:
       value:
        error_code: SHOPPING_LIST_001_INVALID_INPUT
        type: ValidationError
        message: Required fields missing or invalid.

      NameMissingValidationExample:
       value:
        error_code: SHOPPING_LIST_002_NAME_MISSING
        type: ValidationError
        message: Shopping list name must not be empty

      DescriptionMissingValidationExample:
       value:
        error_code: SHOPPING_LIST_003_DESCRIPTION_MISSING
        type: ValidationError
        message: Description must not be empty.   


      DuplicateNameValidationExample:
       value:
        error_code: SHOPPING_LIST_004_DUPLICATE_NAME
        type: ValidationError
        message: Shopping list with the same name already exists.

      InvalidLineItemExample:
       value:
        error_code: SHOPPING_LIST_005_INVALID_LINE_ITEM
        type: ValidationError
        message: One or more line items are invalid.

      InvalidOptionsExample:
       value:
        error_code: SHOPPING_LIST_006_INVALID_OPTIONS
        type: ValidationError
        message: Invalid or missing product options.

      TooManyItemsExample:
       value:
        error_code: SHOPPING_LIST_007_TOO_MANY_ITEMS
        type: ValidationError
        message: Exceeded maximum allowed items.

      InvalidFormatExample:
       value:
        error_code: SHOPPING_LIST_008_INVALID_FORMAT
        type: ValidationError
        message: Request payload format is invalid.

      InvalidRequestExample:
       value:
        error_code: SHOPPING_LIST_009_INVALID_REQUEST
        type: ValidationError
        message: Invalid or malformed request.

      NotFoundExample:
       value:
        error_code: SHOPPING_LIST_010_NOT_FOUND
        type: NotFoundError
        message: The requested shopping list could not be found.
            